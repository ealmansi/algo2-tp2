temporada se representa con estrT

donde estrT es: tupla<
	sistema : sistemaLaboral, 
	paritariasAbiertas: conj(pparitaria),
	acuerdosVigentes: diccTrie(lista(pacuerdo)),
	#aperturas: diccTrie(nat),
>

---

Iniciar: in sl: sistemaLaboral -> res: temporada
iIniciar: in sl: sistemaLaboral -> res: estrT
	
	res.sistema <- sl
	res.paritariasAbiertas <- Vacío()
	res.acuerdosVigentes <- DiccVacío()
	res.#aperturas <- DiccVacío()

---

AbrirParitaria: in/out tmp: temporada, in gr: pgremio, in p: nat, in t: nat, in es: conj(empresa)
iAbrirParitaria: in/out tmp: estrT, in gr: pgremio, in p: nat, in t: nat, in es: conj(empresa)

	if Dame#Aperturas(tmp, gr) > 0
		RemoverAcuerdo(tmp, gr)

	Agregar(tmp.paritariasAbiertas, &NuevaParitaria(gr, p, t))

---

CerrarAcuerdo: in/out tmp: temporada, in gr : pgremio , in pcj:nat 
iCerrarAcuerdo: in/out tmp: estrT, in gr : pgremio , in pcj:nat

	RemoverParitaria(tmp, gr)
	
	itLista(pacuerdo) itAcuerdos <- CrearIt(DameAcuerdosDeAliados(tmp, gr))

	while HaySiguiente(itAcuerdos) && DamePorcentaje(*Siguiente(itAcuerdos)) < pcj

		Agregar(tmp.paritariasAbiertas, DameParitaria(*Siguiente(itAcuerdos)))

		EliminarSiguiente(itAcuerdos)

	AgregarComoSiguiente(itAcuerdos,&NuevoAcuerdo(pa, pcj))

---

Reabrir: in/out tmp: temporada, in gr: pgremio
iReabrir: in/out tmp: estrT,  in gr: pgremio

	pparitaria pa <- RemoverAcuerdo(tmp, gr)

	Agregar(tmp.paritariasAbiertas, pa)

---

Gremios: in/out tmp: temporada -> res: conj(gremio)
iGremios: in/out tmp: estrT -> res: conj(gremio)

	res <- DameGremios(tmp.sistema)

---

EnParitarias: in/out tmp: temporada, in gr: pgremio -> res: bool
iEnParitarias: in/out tmp: estrT, in gr: pgremio -> res: bool

	itConj(pparitaria) itParitarias <- CrearIt(tmp.paritariasAbiertas)

	while HaySiguiente(itParitarias) && DameGremio(*Siguiente(itParitarias)) != gr
		Avanzar(itParitarias)

	res <- HaySiguiente(itParitarias)

---

GremiosNegociando: in/out tmp: temporada -> res: conj(pgremio)
iGremiosNegociando: in/out tmp: estrT -> res: conj(pgremio)

	res <- Vacío()

	itConj(pparitaria) itParitarias <- CrearIt(tmp.paritariasAbiertas)

	while HaySiguiente(itParitarias)
		Agregar(res,DameGremio(*Siguiente(itParitarias)))
		Avanzar(itParitarias)

---

EmpresasNegociando: in/out tmp: temporada -> res: conj(empresa)
iEmpresasNegociando: in/out tmp: estrT -> res: conj(empresa)

	res <- Vacío()

	itConj(pparitaria) itParitarias <- CrearIt(tmp.paritariasAbiertas)

	while HaySiguiente(itParitarias)
		conj(empresa) empresasParitaria <- DameEmpresas(*DameGremio(*Siguiente(itParitarias)))
		res <- Union(res, empresasParitaria)
		Avanzar(itParitarias)

---

TrabajadoresNegociando: in/out tmp: temporada -> res: nat
iTrabajadoresNegociando: in/out tmp: estrT -> res: nat

	res <- 0

	itConj(pparitaria) itParitarias <- CrearIt(tmp.paritariasAbiertas)

	while HaySiguiente(itParitarias)
		nat #afiliadosParitaria <- Dame#Afiliados(*DameGremio(*Siguiente(itParitarias)))
		res <- res + #afiliadosParitaria
		Avanzar(itParitarias)

---

GremioConflictivo: in/out tmp: temporada -> res: pgremio
iGremioConflictivo: in/out tmp: estrT -> res: pgremio

	itConj(pgremio) itGremios <- Gremios(tmp)

	pgremio gremioConflictivo <- Siguiente(itGremios)
	nat maxAperturas <- Dame#DeAperturas(tmp, gremioConflictivo)
	Avanzar(itGremios)

	while HaySiguiente(itGremios)

		nat #aperturas <- Dame#DeAperturas(tmp, Siguiente(itGremios))

		if #aperturas > maxAperturas

			maxAperturas <- #aperturas
			gremioConflictivo <- Siguiente(itGremios)

		Avanzar(itGremios) 

	res <- gremioConflictivo

---

iDameAcuerdosDeAliados: in tmp:estrT, in gr: pgremio -> res: lista(pacuerdo)

	res <- Obtener(tmp.acuerdosVigentes, DameIdGrupoAliados(tmp.sistema, gr))
---

iDame#DeAperturas: in tmp: , gr: pgremio -> res: nat

	res <- Obtener(tmp.#aperturas, DameId(*gr))

---

iRemoverParitaria: in tmp: , in gr: pgremio -> res: pparitaria

	itConj(pparitaria) itParitarias <- CrearIt(tmp.paritariasAbiertas)

	while DameGremio(*Siguiente(itParitarias)) != gr
		Avanzar(itParitarias)

	res <- Siguiente(itParitarias)

	EliminarSiguiente(itParitarias)

---

iRemoverAcuerdo: in/out tmp: estrT, in gr: pgremio -> res: pparitaria
	
	itLista(pacuerdo) itAcuerdos <- CrearIt(DameAcuerdosDeAliados(tmp, gr))

	while DameGremio(*Siguiente(itAcuerdos)) != gr
		Avanzar(itAcuerdos)  

	res <- DameParitaria(*Siguiente(itAcuerdos))

	EliminarSiguiente(itAcuerdos)
